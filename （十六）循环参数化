一、背景
说明：
  在对一个接口进行测试的时候，出现需要参数化的情况，设想有两个
  设想一：
    将测试数据构造出来，然后给下面的data进行调用，主要依靠循环，当时想的是两个循环，但是层级错误，失败后调优成功。
    
  设想二：
    想要通过本地excel进行构建，然后调用，但是没尝试，数据构造使用了搜嘎的方式。
 
 
二、代码 
 方法一：
 
# coding:utf-8
import requests
def diagnosebill():
  u = "http://10.10.65.238:8080/api/v1/hospital/outpatientfee/push/outpatientfee"
  head = {
            "Content-Type":"application/json",
            #"Authorization":"bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsInNjb3BlIjpbImFwcCJdLCJleHAiOjE1NzQzNjUyNjYsInVzZXJJZCI6IjEyNyIsImF1dGhvcml0aWVzIjpbImFkbWluIl0sImp0aSI6IjVkZTE0NWE4LTU1MTItNDU3Yy1hNDZjLTU3ODkyMDE4M2VmMCIsImNsaWVudF9pZCI6ImFwcCJ9.p7xWInqilJdaymcAaNu6VTbXJxd8DOy0JI_AxuwwIUQ"
            "Authorization":"bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiIxODg1OTE0MjMxMSIsInNjb3BlIjpbImFwcCJdLCJleHAiOjE1NzQzNDU2OTgsInVzZXJJZCI6IjExOTY5OTkwMjA2NjIyMzEwNDEiLCJhdXRob3JpdGllcyI6WyJ1c2VyIl0sImp0aSI6ImZiMmZlODQ0LThmMjktNDVjNy05ZTM3LWE5Nzk0NzU2M2U4NiIsImNsaWVudF9pZCI6ImFwcCJ9.W1BWB4UUxCio6yp4wVj_W-xGlIDd8VOOE9NT_Pk3zrQ"
          }
  liushui = {
  
            "cf123455560",
            "cf123455561",
            "cf123455562",
            "cf123455563",
            "cf123455564"
          }
#循环要包括以下所有，不然调用的时候只能取最后一个值，而不是全部          
for i in liushui:
  
     data =  [
                              {
                                "outpatientFee": {
                                  "amount": 0.02,
                                  "deptCode": "pf-0010",
                                  "deptName": "皮肤科",
                                  "doctorId": "ly-03988",
                                  "doctorName": "刘军",
                                  "hospitalCode": "1181477348160311298",
                                  "hospitalName": "赤峰市医院",
                                  "patientEhc": "d8d6c47b-57c6-4ce7-b0b3-9b773ebe4b58",
                                  "patientId": 39434,
                                  "patientName": "王五",
                                  
                                  #调用liushui里面的数据
                                  #同时所需要调用的字段内加f，格式：
                                  #                  testdata="ceshi1"
                                  #                  f"vaule是{testdata}"   
                                  #参考博客：https://blog.csdn.net/s740556472/article/details/81111493
                                  "paymentCode": f"{i}",
                                  
                                  "hospitalStatus": "1",
                                  "caseNumber": "393939393939393"
                                },
                                "detailList": [
                                  {
                                    "amount": 0.2,
                                    "code": "xy1",
                                    "count": 2,
                                    "name": "阿莫西林",
                                    "price": 12
                                  }
                                ]
                              }
                            ]
     r = requests.post(url=u,json=data,headers=head)
     r.encoding = "utf-8"
     print(r.status_code)
     print(r.text)
     
if __name__=="__main__":
  diagnosebill()
  
  
  
  方法二：
  说明：
      方法二是使用了搜嘎的优化，优化点：
        1.不需要自己构造测试数据，因为测试数据是字符加数字
        2.使用range直接取值，同时因为测试数据格式是：cf1234567，所以生成的同时还使用字符串添加在前面
   
# coding:utf-8
import requests
def diganosebill():
u = "http://10.10.65.238:8080/api/v1/hospital/outpatientfee/push/outpatientfee"
head = {
     "Content-Type":"application/json",
     #"Authorization":"bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsInNjb3BlIjpbImFwcCJdLCJleHAiOjE1NzQzNjUyNjYsInVzZXJJZCI6IjEyNyIsImF1dGhvcml0aWVzIjpbImFkbWluIl0sImp0aSI6IjVkZTE0NWE4LTU1MTItNDU3Yy1hNDZjLTU3ODkyMDE4M2VmMCIsImNsaWVudF9pZCI6ImFwcCJ9.p7xWInqilJdaymcAaNu6VTbXJxd8DOy0JI_AxuwwIUQ"
     "Authorization":"bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiIxODg1OTE0MjMxMSIsInNjb3BlIjpbImFwcCJdLCJleHAiOjE1NzQzNDU2OTgsInVzZXJJZCI6IjExOTY5OTkwMjA2NjIyMzEwNDEiLCJhdXRob3JpdGllcyI6WyJ1c2VyIl0sImp0aSI6ImZiMmZlODQ0LThmMjktNDVjNy05ZTM3LWE5Nzk0NzU2M2U4NiIsImNsaWVudF9pZCI6ImFwcCJ9.W1BWB4UUxCio6yp4wVj_W-xGlIDd8VOOE9NT_Pk3zrQ"
          }
 
 liushui = ['cf'+str(i) for i range(100000,199999)]
 
 for a in liushui:
  
  data =  [
                              {
                                "outpatientFee": {
                                  "amount": 0.02,
                                  "deptCode": "pf-0010",
                                  "deptName": "皮肤科",
                                  "doctorId": "ly-03988",
                                  "doctorName": "刘军",
                                  "hospitalCode": "1181477348160311298",
                                  "hospitalName": "赤峰市医院",
                                  "patientEhc": "d8d6c47b-57c6-4ce7-b0b3-9b773ebe4b58",
                                  "patientId": 39434,
                                  "patientName": "王五",
                                  
                                  #调用liushui里面的数据
                                  #同时所需要调用的字段内加f，格式：
                                  #                  testdata="ceshi1"
                                  #                  f"vaule是{testdata}"   
                                  #参考博客：https://blog.csdn.net/s740556472/article/details/81111493
                                  "paymentCode": f"{i}",
                                  
                                  "hospitalStatus": "1",
                                  "caseNumber": "393939393939393"
                                },
                                "detailList": [
                                  {
                                    "amount": 0.2,
                                    "code": "xy1",
                                    "count": 2,
                                    "name": "阿莫西林",
                                    "price": 12
                                  }
                                ]
                              }
                            ]
     r = requests.post(url=u,json=data,headers=head)
     r.encoding = "utf-8"
     print(r.status_code)
     print(r.text)
     
if __name__=="__main__":
  diagnosebill()
 
注意：
  整个代码中只用到了1个循环，当时想着data一个循环，输出一个循环，但是这样的话最后输出只能取最后一个值，那是因为data循环后没有存，只能最后保留出一个
  最后的值，所以输出调用的也就是最后一个值。错误代码如下：
  
  
  # coding-utf-8
import requests
import urllib3
urllib3.disable_warnings()
def xunhuna():
    xh = {
        "1234",
        12345,
        "adsfdsf",
        "???"


    }
    u = "https://www.baidu.com"
    head = {
        "Content-Type":"text/html;charset=utf-8",
        "Cookie":"PSTM=1494075250; BIDUPSID=7B1A82EAA8377332013FE553B485F595; MCITY=-300%3A; BAIDUID=83CF243C5EDAA7CDE69B7229EA104D8E:SL=0:NR=10:FG=1; BDUSS=gweDIzcH5sYzdhcEduQXl3OHg5MDhRUlhLSm1mMkJVM0Z2b0Y4Q1NTQk91dVpjRVFBQUFBJCQAAAAAAAAAAAEAAADnmuso0MLK1tChtO83MDk5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE4tv1xOLb9cd1; BD_UPN=13314352; BD_HOME=1; H_PS_PSSID=1433_21118_30186_29568_29220; sug=3; sugstore=0; ORIGIN=2; bdime=0; BDRCVFR[feWj1Vr5u3D]=I67x6TjHwwYf0; delPer=0; BD_CK_SAM=1; PSINO=2; BDSVRTM=24; WWW_ST=1574353276550",
        "Host":"www.baidu.com",
         "User-Agent":"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0"
            }
    #这是对xh数据的循环       
    for i in xh:
        data = {
            "wd":f"{i}"
        }
        #输出后可以看到正常的每个数据，但是后面调用的时候也只能调用最后的数据
        print(data)
    #while与for是一样的效果，但唯独while是循环5次，for是循环一次，因为data最后只有一个值，后期可以想办法将data的循环值存下来，然后调用，但这样
    #其实原理是一样的
    # a = 0
    # while a<=5:
    for c in data:

        r = requests.get(url=u,params=data,headers=head,verify=False)
        r.encoding = "utf-8"
        print(r.url)
        print(r.status_code)
        #a=a+1
    #print(r.text)

if __name__=="__main__":
    xunhuna()
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
