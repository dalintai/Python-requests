一、selenium自动化格式：
1.使用unittest框架
2.生成报告
3.多文件调用

======================
文件1
======================

import unittest
from selenium import webdriver
from HTMLTestRunner import HTMLTestRunner
from time import sleep

class test1(unittest.TestCase):
  def setUp(self):
    option = webdriver.ChromeOptions()
    option.arr_argument("headless")
    driver = webdriver.Chrome(chrome.options=option)
    #driver = webdriver.Chrome()
    
  def treanDown(self):
    pass
    
  def test_ceshiwenjian1(self):
    driver = self.driver
    url = ("https://www.baidu.com")
    driver.get(url)
    driver.find_element_by_id("kw").send_keys("测试")
    driver.find_element_by_id("su").click()
    
if __name__=="__main__":
  unittest.main()

======================
文件2
======================

from selenium import webdriver
from time import sleep
import unittest

class test2(unittest.TestCase):
  def setUp(self):
    option = webdriver.ChromeOptions()
    option.arr_argument("headless")
    driver = webdriver.Chrome(chrome.options=option)
    url2 = ("http://www.jianshu.com")
    
  def treanDown(self)
    time.sleep(2)
    pass
    
  def test_jianshu(slef):
    driver = self.driver
    driver.get(url2)
    driver.find_element_by_id_("asd")_send_keys("123")
    driver.find_element_by_id("qwe").click()
    
if __name__=="__main__":
  unittest.main()
  
======================
__init__执行文件
======================

# coding:utf-8
from selenium import webdriver
from HTMLTestRunner import HTMLTestRunner
import unittest
import test1,test2

#测试文件进行封装成一个测试套件
piliang = unittest.TestSuite()
#在进行批量执行的时候，主要是对文件以及里面的类型进行标识
piliang.addTest(unittest.makeSuite(test1.TestCase1))
piliang.addTest(unittest.makeSuite(test2.TestCase2))

wenjian = open('C:\\Users\\Mr_yang\\Desktop\\Selenium脚本\\baogao.html','wb')

ru = HTMLTestRunner(stream = wenjian,
                    title='自动化测试报告',
                    description='用例执行情况：')
#ru = unittest.TextTestRunner()
ru.run(piliang)

============================================================
项目实例
============================================================
# coding:utf-8
from selenium import webdriver
import unittest
from time import sleep
from HTMLTestRunner import HTMLTestRunner
class script1(unittest.TestCase):
    @classmethod
    def setUpClass(self):
        #option = webdriver.ChromeOptions()
        #option.arr_arugment("headless")
        #driver = webdriver.ChromeOptions(chrome_options=option)
        self.driver = webdriver.Chrome()
        self.u = "http://47.104.24.205:8080/share/a/login"
        self.driver.get(self.u)
        #窗口全屏显示
        self.driver.maximize_window()
    @classmethod
    def traenDownClass(self):
        sleep(3)
        pass
        #self.driver.quit()
    def test_Alogin(self):
        driver = self.driver
        driver.find_element_by_id("username").send_keys("admin")
        driver.find_element_by_id("password").send_keys("****")
        #隐性等待
        driver.implicitly_wait(3)
        #driver = self.driver
        driver.find_element_by_class_name("loginBtn").click()
        driver.implicitly_wait(1)
        #sleep(5)
    def test_Bwline(self):
        driver = self.driver
        sleep(3)
        driver.find_element_by_xpath("//*[@id='accordion0']/li[3]/div/a").click()
        #将driver.find_element_by_link_text赋值给line，后面就可以直接调用
        line = driver.find_element_by_link_text
        line("双数值轴折线图").click()
        #sleep(3)
        driver.implicitly_wait(3)
        line_path = driver.find_element_by_xpath
        line_path("//*[@id='topMenuBox']/ul/li[3]").click()
        sleep(3)
    def test_Clive(self):
        driver =self.driver
        live = driver.find_element_by_link_text
        live("我的直播间").click() 
        sleep(3)
        driver.switch_to.frame("mainFrame")
        driver.find_element_by_xpath("/html/body/div[1]/div/div[2]/div[1]/div/div/button").click()
        driver.implicitly_wait(3)
        driver.switch_to.default_content()
        driver.implicitly_wait(3)
    def test_Dmessage(self):
        driver = self.driver
        message = driver.find_element_by_xpath
        sleep(3)
#         sreach_windows = driver.current_window_handle
#         all_handles = driver.window_handles
#         for handle in all_handles:
#             if handle != sreach_windows:
#                  driver.switch_to.window(handle)
#                  driver.find_element_by_id("title").send_keys("test")
#                  sleep(2)
#                  driver.find_element_by_id("sponsor").send_keys("test")
#                  sleep(2)
#                  driver.find_element_by_xpath("//*[@id='startTime']").click()
#                  driver.find_element_by_xpath("//*[@id='layui-laydate1']/div[1]/div[2]/table/tbody/tr[4]/td[2]").click()
#                  sleep(2)
#                  driver.find_element_by_xpath("//*[@id='endTIme']").click()
#                  driver.find_element_by_xpath("//*[@id='layui-laydate2']/div[1]/div[2]/table/tbody/tr[4]/td[3]").click()
#                  driver.find_element_by_class_name("layui-layer-btn0").click()
        driver.switch_to.frame("layui-layer-iframe1")
        driver.find_element_by_id("title").send_keys("test")
        sleep(3)
        driver.find_element_by_id("sponsor").send_keys("test")
        sleep(3)
        message("//*[@id='startTime']").click()
        message("//*[@id='layui-laydate1']/div[1]/div[2]/table/tbody/tr[4]/td[3]").click()
        sleep(3)
        message("//*[@id='endTIme']").click()
        message("//*[@id='layui-laydate2']/div[1]/div[2]/table/tbody/tr[4]/td[4]").click()
        driver.implicitly_wait(3)
        driver.switch_to.default_content()
        sleep(3)
        driver.find_element_by_xpath("//*[@id='layui-layer1']/div[3]/a[1]").click()
        driver.implicitly_wait(1)
    def test_Eupload(self):
        driver = self.driver
        driver.switch_to.frame("mainFrame")
        upload = driver.find_element_by_xpath
        upload("//*[@id='contentTable']/tbody/tr[1]/td[5]/a[2]").click()
        sleep(2)
        upload("/html/body/div[1]/div/div[2]/div[1]/div/div/button").click()
        upload("//*[@id='exampleModal']/div/div/div[2]/div[1]/div[1]/div/div[1]").send_keys("C:\\Users\Mr_yang\Desktop\25.jpg")
  

if __name__=="__main__":
    #unittest.main()  
    testunit = unittest.TestSuite()
    testunit.addTest(script1("test_Alogin"))
    testunit.addTest(script1("test_Bwline"))
    testunit.addTest(script1("test_Clive"))
    testunit.addTest(script1("test_Dmessage"))
    testunit.addTest(script1("test_Eupload"))
    script = open('C:/Users/Mr_yang/Desktop/Selenium脚本/demo-script/demo.html','wb')
    fp = HTMLTestRunner(stream = script,
                    title='自动化测试报告',
                    description='用例执行情况：')
    #ru = unittest.TextTestRunner()
    fp.run(testunit)     
    script.close
   
    
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
文件上传实例
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# coding:utf-8
from selenium import webdriver
import unittest
from time import sleep
class script2(unittest.TestCase):
    @classmethod
    def setUpClass(self):
        #option = webdriver.ChromeOptions()
        #option.arr_arugment("headless")
        #driver = webdriver.ChromeOptions(chrome_options=option)
        self.driver = webdriver.Chrome()
        self.u = "http://47.104.24.205:8080/share/a/login"
        self.driver.get(self.u)
        self.driver.maximize_window()
        self.driver.get(self.u)
        self.driver.implicitly_wait(2)
        flont = self.driver.find_element_by_id
        flont("username").send_keys("admin")
        flont("password").send_keys("****")
        self.driver.implicitly_wait(2)
        self.driver.find_element_by_class_name("loginBtn").click()
        
    @classmethod
    def traenDownClass(self):
        sleep(3)
        pass
        self.driver.quit()
    def test_Asetout(self):
        driver = self.driver
        driver.find_element_by_xpath("//*[@id='topMenuBox']/ul/li[3]").click()
        driver.implicitly_wait(2)
        driver.find_element_by_link_text("我的直播间").click()
        sleep(2)
	#进入iframe
        driver.switch_to.frame("mainFrame")
        driver.find_element_by_xpath("/html/body/div[1]/div/div[2]/table/tbody/tr[1]/td[5]/a[2]").click()
        driver.implicitly_wait(5)
        sleep(2)
        driver.find_element_by_xpath("/html/body/div[1]/div/div[2]/div[1]/div/div/button").click()
        sleep(2)

	#点击选择文件按钮，并选择上传的文件，如果提示转码问题，那就是文件路径有问题，以下是用eclipse编译器写的，尝试常规方式有：1。/；2。\\；3。\
        driver.find_element_by_id("input-file").send_keys("C:/Users/Mr_yang/Desktop/25.jpg")
        driver.implicitly_wait(5)

	#点击上传按钮
        driver.find_element_by_xpath("//*[@id='exampleModal']/div/div/div[2]/div[1]/a").click()
        sleep(2)
        
        
        
if __name__=="__main__":
    unittest.main()        

        

        


二、接口测试
说明：
1.使用unittest

import unittest
import requests
from HTMLTestRunner import HTMLTestRunner
import urllib3
urllib3.disable_warnings()
class jiekou(self):
  def setUp(self):
  u = ""
  
   

=======================================
项目实例
1.使用unittest框架
=======================================
# coding:utf-8
#from HTMLTestRunner import HTMLTestRunner
import requests
import unittest
class allTestPort(unittest.TestCase):
    def setUp(self):
        self.u = "http://192.168.1.66:8080"
    def treanDown(self):
        pass
    def test_cliniclist(self):
        path = "/api/v1/resident/patient/list"
        head = {
                "Authorization":"bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiIxODg1OTE0MjMxMSIsInNjb3BlIjpbImFwcCJdLCJleHAiOjE1NzYwNzgzMDEsInVzZXJJZCI6IjEyMDM5MTU3ODU5ODUxNzU1NTMiLCJhdXRob3JpdGllcyI6WyJ1c2VyIl0sImp0aSI6IjM2ZDhjYWM3LTMxMWMtNDRiYi1hM2E4LTI3YjdiZmQ4YmI5OCIsImNsaWVudF9pZCI6ImFwcCIsInVzZXJuYW1lIjoiMTg4NTkxNDIzMTEifQ.nFPy0agpVWsRYNfJKejGDRz4QsCbpSM7AseK6mx7yfc"
            }
        r = requests.get(url=self.u+path,headers=head)
        r.encoding = "utf-8"
        print("获取就诊人列表：",r.url)
        print(r.status_code)
        print(r.text)
     
    def test_addclinic(self):
         path ="/api/v1/resident/patient"   
         head = {
             "Content-Type":"application/json",
             "Authorization":"bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiIxODg1OTE0MjMxMSIsInNjb3BlIjpbImFwcCJdLCJleHAiOjE1NzYwNzgzMDEsInVzZXJJZCI6IjEyMDM5MTU3ODU5ODUxNzU1NTMiLCJhdXRob3JpdGllcyI6WyJ1c2VyIl0sImp0aSI6IjM2ZDhjYWM3LTMxMWMtNDRiYi1hM2E4LTI3YjdiZmQ4YmI5OCIsImNsaWVudF9pZCI6ImFwcCIsInVzZXJuYW1lIjoiMTg4NTkxNDIzMTEifQ.nFPy0agpVWsRYNfJKejGDRz4QsCbpSM7AseK6mx7yfc"
             }
         data ={
              # sex: '',
              "patientName": "王五",
              "idCard": "847590098767648371",
              "phone": "18859142311",
              #"childBirthday": '2019-11-1',
              #"childSex": '1',
              #"childIdCard": '
               #"childName": '',
              "cardType": '01',
              "hospitalId": '',
              "patientType": "1",

            }
                
         r = requests.post(url=self.u+path,json=data,headers=head)
         r.encoding = "utf-8"
         print("添加就诊人：",r.url)
         print(r.status_code)
         print(r.text)
         
    #def test_     
if __name__=="__main__":
    unittest.main()
#     testunit = unittest.TestSuite()
#     testunit.addTest(allTestPort("test_cliniclist"))        
        
        
        
        
        
三、locust性能测试
       
==============================================
项目实例
==============================================

# coding:utf-8
from locust import HttpLocust,task,TaskSet
import random
import json
class UserBehavior(TaskSet):
	
	def start_on(self):
		u = "http://47.104.82.246/"
		path = "/a/login"
		data = {
			"username":"****",
			"password":"****"
		}
    #获取出session
		self.session = HttpSession(self.host)
		r = self.client.post(url=u+path,data=data)
		print("状态码",r.status_code)
		print(r.text)
  #添加task装饰器，才能执行  
	@task
	def test_zhibo(self):
		u = "http://47.104.82.246/"
		url = "http://photoshare.ieds.com.cn/photolive/news/3236b0b5f23b4bb7a6e367f82c54b84a"
		path = "/photolive/news/0a584d5cf51a421c9a3716f29e57f50b"
		head = {
			#"Cookie":"jeeplus.session.id=8600d233ee3b4e998b6d774cfbd306c8; JSESSIONID=D166F2731A4418F90D6076E8AE877D75",
			"Cookie":"jeeplus.session.id=52cfc6a1777246c1ace6777afca46d93; JSESSIONID=DB815D710A159E552F9E33E28AE461E0",
			"Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0"
			#"Host":"47.104.82.246"
			
		}
    #通过session进行登录，如果单独登录，直接使用r = requests.client.get(url,headers,data)
		r = self.session.get(url=url)
		print("状态码:",r.status_code)
		#print("响应：",r.text)
class WebsiteUser(HttpLocust):
	task_set = UserBehavior
	min_wait = 3000
	max_wait = 5000
		
		
        
        
        






  












